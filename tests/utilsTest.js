


const X = tf.randomNormal([5,5]);
const a = tf.tensor([1,2,3,4,5]).expandDims(1);

const output = insert2Tensor(X,a,[0, 2]);

output.print();

// testing replace2Tensor

/**
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 */
const w = tf.zeros([10,10]);

/**
 * [1,1,1,1]
 * [1,1,1,1]
 * [1,1,1,1]
 */
const b = tf.ones([3,4]);


/**
 *      | | |
 *      _ _ _
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,1,1,1,0,0,0,0,0,0,0] <-
 * [0,0,1,1,1,0,0,0,0,0,0,0] <-
 * [0,0,1,1,1,0,0,0,0,0,0,0] <-
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 * [0,0,0,0,0,0,0,0,0,0,0,0]
 */
const out = replace2Tensor(w, b, [8,2] );

out.print();